// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionBank.Infrastructure.Context;

#nullable disable

namespace QuestionBank.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240319134225_ExamResultsUpdate")]
    partial class ExamResultsUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AccessTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessTokenLifeTime = 360000,
                            ClientId = "QuestionBank",
                            ClientName = "QuestionBank",
                            ClientSecret = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            Description = "QuestionBank Access Managment Client",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9217),
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefreshTokenLifeTime = 360000,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9220),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9216),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ApiClaimId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiClaimId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAPIResource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApiClaimId = 1L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1362),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1362),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1361),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ApiClaimId = 2L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1496),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1496),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1496),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ApiClaimId = 3L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1587),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1587),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1586),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ApiClaimId = 4L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1920),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1920),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1920),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ApiClaimId = 5L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2040),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2040),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2040),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ApiClaimId = 6L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2160),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2160),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2159),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ApiClaimId = 7L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2257),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2256),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2256),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ApiClaimId = 8L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2579),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2579),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2578),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ApiClaimId = 9L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2709),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2709),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2708),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ApiClaimId = 10L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2803),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2802),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2802),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ApiClaimId = 11L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2939),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2939),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(2938),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ApiClaimId = 12L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3058),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3058),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3057),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ApiClaimId = 13L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3171),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3171),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3170),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ApiClaimId = 14L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3262),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3262),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3262),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ApiClaimId = 15L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3377),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3376),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3376),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ApiClaimId = 16L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3492),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3492),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3491),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ApiClaimId = 17L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3622),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3622),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3621),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ApiClaimId = 18L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3748),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3748),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(3747),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ApiClaimId = 19L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4090),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4089),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4089),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ApiClaimId = 20L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4222),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4222),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4222),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ApiClaimId = 21L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4367),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4366),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4366),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ApiClaimId = 22L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4497),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4497),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4497),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ApiClaimId = 23L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4805),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4805),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4804),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ApiClaimId = 24L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4937),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4936),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(4936),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ApiClaimId = 25L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5028),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5027),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5027),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ApiClaimId = 26L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5146),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5146),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5146),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ApiClaimId = 27L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5474),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5474),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5473),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ApiClaimId = 28L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5591),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5591),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5591),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ApiClaimId = 29L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5686),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5686),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5685),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ApiClaimId = 30L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5808),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5807),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(5807),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ApiClaimId = 31L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6127),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6126),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6126),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ApiClaimId = 32L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6220),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6219),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6219),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ApiClaimId = 33L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6338),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6337),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6337),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            ApiClaimId = 34L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6471),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6471),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6471),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            ApiClaimId = 35L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6585),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6585),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6585),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            ApiClaimId = 36L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6675),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6675),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6674),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            ApiClaimId = 37L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6789),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6788),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6788),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            ApiClaimId = 38L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6906),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6905),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(6905),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            ApiClaimId = 39L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7017),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7017),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7017),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            ApiClaimId = 40L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7108),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7107),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7107),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            ApiClaimId = 41L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7226),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7225),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7225),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            ApiClaimId = 42L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7354),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7353),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7353),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            ApiClaimId = 43L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7446),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7445),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7445),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            ApiClaimId = 44L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7570),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7569),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7569),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            ApiClaimId = 45L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7696),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7696),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7696),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            ApiClaimId = 46L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7818),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7818),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7817),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            ApiClaimId = 47L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7909),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7909),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(7909),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            ApiClaimId = 48L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8042),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8042),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8041),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            ApiClaimId = 49L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8161),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8160),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8160),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            ApiClaimId = 50L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8275),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8275),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8275),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            ApiClaimId = 51L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8367),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8366),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8366),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            ApiClaimId = 52L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8484),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8484),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8483),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            ApiClaimId = 53L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8617),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8617),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8617),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            ApiClaimId = 54L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8709),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8708),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8708),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            ApiClaimId = 55L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8827),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8827),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8826),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            ApiClaimId = 56L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8943),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8942),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(8942),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            ApiClaimId = 57L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9055),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9055),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9054),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequireIdToken")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApiClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "TokenValidator-ValidateAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9964),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9964),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9963),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "TokenValidator-ValidateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(150),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(150),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(149),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "TokenValidator-ValidateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(518),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(518),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(517),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "TokenValidator-GenerateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(900),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(899),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(899),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Client-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1238),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1238),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1238),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "Client-GetById",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1386),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1386),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1385),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "Client-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1692),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1692),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1691),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Client-GetClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1793),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1793),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1792),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Client-UpdateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1923),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1923),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(1922),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Client-DeleteClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2065),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2064),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2064),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Client-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2398),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2397),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2397),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Client-RefreshToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2720),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2720),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(2719),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Client-ActivateDeactivateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3249),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3249),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3248),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "ClientClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3564),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3564),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3564),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "ClientClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3669),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3669),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3669),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "ClientClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3982),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3982),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(3982),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "ClientClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4106),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4106),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4105),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4206),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4206),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4205),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "ClientClaim-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4332),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4332),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4332),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "ClientClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4463),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4463),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4463),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "ClientApiResource-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4602),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4602),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4602),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Password-ChangePassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4712),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4711),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4711),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Password-ResetPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4836),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4836),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4836),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Password-ForgotPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4960),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4960),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(4959),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "Role-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5060),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5059),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5059),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "Role-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5182),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5182),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5181),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "Role-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5330),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5330),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5330),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "Role-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5430),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5430),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5429),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "Role-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5556),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5555),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5555),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "Role-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5716),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5716),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5715),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "Role-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5862),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5862),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(5862),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "User-CreateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6182),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6182),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6181),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6760),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6759),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(6759),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            Claim = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7113),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7113),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7112),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            Claim = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7223),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7222),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7222),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            Claim = "User-DeleteUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7542),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7541),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7541),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            Claim = "User-ActivateDeactivateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7672),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7672),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7672),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            Claim = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7799),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7798),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7798),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            Claim = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7923),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7922),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(7922),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            Claim = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8088),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8088),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8088),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            Claim = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8441),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8440),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8440),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            Claim = "ApiClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8591),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8591),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8590),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            Claim = "ApiClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8742),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8741),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(8741),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            Claim = "ApiClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9109),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9108),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9108),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            Claim = "ApiClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9354),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9354),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9354),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            Claim = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9588),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9588),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9588),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            Claim = "ApiClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9759),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9759),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9759),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            Claim = "ApiClaim-RequiredTokenUpdate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9912),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9912),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 325, DateTimeKind.Utc).AddTicks(9911),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            Claim = "ApiClaim-GetAllByServiceId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(23),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(22),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(22),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            Claim = "Service-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(153),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(152),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(152),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            Claim = "Service-ActivateDeactivateService",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(283),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(283),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(283),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            Claim = "Service-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(388),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(388),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(387),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            Claim = "Service-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(520),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(520),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(519),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            Claim = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(691),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(690),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(690),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            Claim = "Service-GetByID",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(839),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(839),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(838),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            Claim = "Actions-IdentityClaimSeeder",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(956),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(955),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(955),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            Claim = "User-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1087),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1087),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(1086),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmationEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "",
                            Email = "abirham.johannes@gmail.com",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            FirstName = "Abraham",
                            IdTokenLifetime = 7200,
                            IsAccountLocked = false,
                            IsCompany = false,
                            IsConfirmationEmailSent = false,
                            IsReadOnly = false,
                            IsSuperAdmin = true,
                            LastLoginDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Yohannes",
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9430),
                            LoginAttemptCount = 0,
                            Password = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            PhoneNumber = "+251921175520",
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9429),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9429),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            Username = "abrahamjo",
                            VerificationToken = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9448),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9448),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9447),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("UserModules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientId = 1L,
                            Description = "Admin",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9230),
                            Name = "Admin",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9229),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9229),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMultiTenant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "QuestionBank Service",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsMultiTenant = false,
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9549),
                            Name = "QuestionBankService",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9549),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 324, DateTimeKind.Utc).AddTicks(9548),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "Dashboard-View",
                            ClientId = 1L,
                            Description = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9849),
                            Name = "Dashboard-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9848),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 326, DateTimeKind.Utc).AddTicks(9848),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "Users-View",
                            ClientId = 1L,
                            Description = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(533),
                            Name = "Users-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(532),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(532),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "Roles-View",
                            ClientId = 1L,
                            Description = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(766),
                            Name = "Roles-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(766),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(766),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "Clients-View",
                            ClientId = 1L,
                            Description = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1005),
                            Name = "Clients-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1005),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1004),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Services-View",
                            ClientId = 1L,
                            Description = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1248),
                            Name = "Services-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1248),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1248),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "ApiClaims-View",
                            ClientId = 1L,
                            Description = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1467),
                            Name = "ApiClaims-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1467),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1466),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "ClientClaim-Views",
                            ClientId = 1L,
                            Description = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1683),
                            Name = "ClientClaim-Views",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1683),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1682),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Users-Add",
                            ClientId = 1L,
                            Description = "Users-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1895),
                            Name = "Users-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1895),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(1895),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Users-Delete",
                            ClientId = 1L,
                            Description = "Users-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2138),
                            Name = "Users-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2138),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2138),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Users-Deactivate",
                            ClientId = 1L,
                            Description = "Users-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2366),
                            Name = "Users-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2366),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2366),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Users-Edit",
                            ClientId = 1L,
                            Description = "Users-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2584),
                            Name = "Users-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2584),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2583),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Reset-Password",
                            ClientId = 1L,
                            Description = "Reset-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2819),
                            Name = "Reset-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2819),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(2819),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Roles-Add",
                            ClientId = 1L,
                            Description = "Roles-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3033),
                            Name = "Roles-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3032),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3032),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "Roles-Deactivate",
                            ClientId = 1L,
                            Description = "Roles-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3246),
                            Name = "Roles-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3246),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3246),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "Roles-Edit",
                            ClientId = 1L,
                            Description = "Roles-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3510),
                            Name = "Roles-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3510),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3510),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "Roles-Delete",
                            ClientId = 1L,
                            Description = "Roles-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3741),
                            Name = "Roles-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3741),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3740),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3957),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3956),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(3956),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4199),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4198),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4198),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "Clients-Deactivate",
                            ClientId = 1L,
                            Description = "Clients-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4413),
                            Name = "Clients-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4412),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4412),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "Clients-Edit",
                            ClientId = 1L,
                            Description = "Clients-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4625),
                            Name = "Clients-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4625),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4624),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "Service-Add",
                            ClientId = 1L,
                            Description = "Service-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4862),
                            Name = "Service-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4861),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(4861),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Service-Delete",
                            ClientId = 1L,
                            Description = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5129),
                            Name = "Service-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5129),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5128),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Service-Deactivate",
                            ClientId = 1L,
                            Description = "Service-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5577),
                            Name = "Service-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5577),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5576),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Service-Edit",
                            ClientId = 1L,
                            Description = "Service-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5876),
                            Name = "Service-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5876),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(5875),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "ApiClaim-Add",
                            ClientId = 1L,
                            Description = "ApiClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6507),
                            Name = "ApiClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6506),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6506),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "ApiClaim-Delete",
                            ClientId = 1L,
                            Description = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6726),
                            Name = "ApiClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6726),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(6725),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "ApiClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ApiClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7162),
                            Name = "ApiClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7161),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7161),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "ApiClaim-Edit",
                            ClientId = 1L,
                            Description = "ApiClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7396),
                            Name = "ApiClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7396),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7396),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "ClientClaim-Add",
                            ClientId = 1L,
                            Description = "ClientClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7624),
                            Name = "ClientClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7623),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7623),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "ClientClaim-Delete",
                            ClientId = 1L,
                            Description = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7879),
                            Name = "ClientClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7879),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(7878),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "ClientClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ClientClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8106),
                            Name = "ClientClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8106),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8105),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "ClientClaim-Edit",
                            ClientId = 1L,
                            Description = "ClientClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8332),
                            Name = "ClientClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8332),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8332),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "Change-Password",
                            ClientId = 1L,
                            Description = "Change-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8588),
                            Name = "Change-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8587),
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(8587),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ClientClaimId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientClaimId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9314),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9313),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9313),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ClientClaimId = 2L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9322),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9322),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9322),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ClientClaimId = 3L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9323),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9323),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9323),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ClientClaimId = 4L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9325),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9324),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9324),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ClientClaimId = 5L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9326),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9326),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9325),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ClientClaimId = 6L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9327),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9327),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9326),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ClientClaimId = 7L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9329),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9328),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9328),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ClientClaimId = 8L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9330),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9330),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9329),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ClientClaimId = 9L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9332),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9332),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9331),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ClientClaimId = 10L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9333),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9333),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9333),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ClientClaimId = 11L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9335),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9335),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9334),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ClientClaimId = 12L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9336),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9336),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9336),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ClientClaimId = 13L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9338),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9338),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9337),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ClientClaimId = 14L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9339),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9339),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9338),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ClientClaimId = 15L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9340),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9340),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9340),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ClientClaimId = 16L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9341),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9341),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9341),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ClientClaimId = 17L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9343),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9342),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9342),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ClientClaimId = 18L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9344),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9344),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9343),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ClientClaimId = 19L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9345),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9345),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9345),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ClientClaimId = 20L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9346),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9346),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9346),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ClientClaimId = 21L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9347),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9347),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9347),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ClientClaimId = 22L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9349),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9348),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9348),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ClientClaimId = 23L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9350),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9350),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9349),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ClientClaimId = 24L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9351),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9351),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9350),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ClientClaimId = 25L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9352),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9352),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9352),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ClientClaimId = 26L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9353),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9353),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9353),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ClientClaimId = 27L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9354),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9354),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9354),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ClientClaimId = 28L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9355),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9355),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9355),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ClientClaimId = 29L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9357),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9356),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9356),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ClientClaimId = 30L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9393),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9393),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9393),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ClientClaimId = 31L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9395),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9395),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9394),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ClientClaimId = 32L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9396),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9396),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9395),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ClientClaimId = 33L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9397),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9397),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 42, 24, 327, DateTimeKind.Utc).AddTicks(9397),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizatoinId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrganizatoinId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Clients.ApiClaim", "ApiClaim")
                        .WithMany()
                        .HasForeignKey("ApiClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("ClientApiResources")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiClaim");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Service", "Service")
                        .WithMany("ApiClaims")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany("IdentityUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Subscription", "Subscription")
                        .WithMany("Organizatoins")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Question", "Question")
                        .WithMany("Choice")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.UserModule", "Module")
                        .WithMany("ExamResults")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Course", "Course")
                        .WithMany("Module")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("Question")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("UserModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("Role")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.User.ClientClaim", "ClientClaim")
                        .WithMany()
                        .HasForeignKey("ClientClaimId");

                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");

                    b.Navigation("ClientClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Organization", "Organizatoin")
                        .WithMany()
                        .HasForeignKey("OrganizatoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Organizatoin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Navigation("ClientApiResources");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Navigation("IdentityUserRoles");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Navigation("Question");

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Navigation("Choice");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Navigation("ApiClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Navigation("Organizatoins");
                });
#pragma warning restore 612, 618
        }
    }
}
