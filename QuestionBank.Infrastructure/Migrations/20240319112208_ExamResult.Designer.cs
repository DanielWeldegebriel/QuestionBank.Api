// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionBank.Infrastructure.Context;

#nullable disable

namespace QuestionBank.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240319112208_ExamResult")]
    partial class ExamResult
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AccessTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessTokenLifeTime = 360000,
                            ClientId = "QuestionBank",
                            ClientName = "QuestionBank",
                            ClientSecret = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            Description = "QuestionBank Access Managment Client",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3599),
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefreshTokenLifeTime = 360000,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3602),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3597),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ApiClaimId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiClaimId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAPIResource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApiClaimId = 1L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3008),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3007),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3007),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ApiClaimId = 2L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3173),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3173),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3172),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ApiClaimId = 3L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3306),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3306),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3306),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ApiClaimId = 4L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3432),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3432),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3432),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ApiClaimId = 5L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3536),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3535),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3535),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ApiClaimId = 6L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3666),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3665),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3665),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ApiClaimId = 7L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3794),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3794),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3793),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ApiClaimId = 8L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3895),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3895),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(3894),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ApiClaimId = 9L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4027),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4027),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4027),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ApiClaimId = 10L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4155),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4155),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4155),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ApiClaimId = 11L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4287),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4287),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4287),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ApiClaimId = 12L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4392),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4391),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4391),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ApiClaimId = 13L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4544),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4544),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4543),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ApiClaimId = 14L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4680),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4680),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4679),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ApiClaimId = 15L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4816),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4816),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4816),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ApiClaimId = 16L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4922),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4922),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(4921),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ApiClaimId = 17L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5067),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5067),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5067),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ApiClaimId = 18L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5200),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5199),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5199),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ApiClaimId = 19L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5303),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5303),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5302),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ApiClaimId = 20L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5438),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5438),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5438),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ApiClaimId = 21L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5571),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5570),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5570),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ApiClaimId = 22L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5700),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5699),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5699),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ApiClaimId = 23L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5803),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5802),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5802),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ApiClaimId = 24L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5948),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5947),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(5947),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ApiClaimId = 25L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6080),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6079),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6079),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ApiClaimId = 26L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6209),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6208),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6208),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ApiClaimId = 27L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6314),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6314),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6313),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ApiClaimId = 28L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6451),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6451),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6451),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ApiClaimId = 29L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6582),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6581),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6581),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ApiClaimId = 30L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6686),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6685),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6685),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ApiClaimId = 31L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6814),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6814),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6813),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ApiClaimId = 32L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6943),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6943),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(6943),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ApiClaimId = 33L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7083),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7082),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7082),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            ApiClaimId = 34L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7186),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7186),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7186),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            ApiClaimId = 35L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7339),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7339),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7339),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            ApiClaimId = 36L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7479),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7479),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7478),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            ApiClaimId = 37L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7615),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7615),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7614),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            ApiClaimId = 38L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7724),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7724),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7723),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            ApiClaimId = 39L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7876),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7876),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(7875),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            ApiClaimId = 40L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8013),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8013),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8013),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            ApiClaimId = 41L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8149),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8149),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8148),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            ApiClaimId = 42L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8253),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8253),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8252),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            ApiClaimId = 43L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8394),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8394),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8393),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            ApiClaimId = 44L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8563),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8563),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8562),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            ApiClaimId = 45L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8668),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8667),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8667),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            ApiClaimId = 46L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8814),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8813),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8813),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            ApiClaimId = 47L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8949),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8948),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(8948),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            ApiClaimId = 48L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9083),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9082),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9082),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            ApiClaimId = 49L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9195),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9194),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9194),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            ApiClaimId = 50L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9326),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9326),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9326),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            ApiClaimId = 51L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9456),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9455),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9455),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            ApiClaimId = 52L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9590),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9589),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9589),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            ApiClaimId = 53L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9693),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9693),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9693),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            ApiClaimId = 54L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9823),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9822),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9822),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            ApiClaimId = 55L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9965),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9965),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(9965),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            ApiClaimId = 56L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(72),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(71),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(71),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            ApiClaimId = 57L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(230),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(229),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(229),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequireIdToken")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApiClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "TokenValidator-ValidateAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4277),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4276),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4275),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "TokenValidator-ValidateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4508),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4508),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4507),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "TokenValidator-ValidateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4642),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4642),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4642),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "TokenValidator-GenerateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4800),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4799),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4799),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Client-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4956),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4956),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(4956),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "Client-GetById",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5117),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5117),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5116),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "Client-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5237),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5237),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5237),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Client-GetClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5390),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5390),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5389),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Client-UpdateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5539),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5539),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5539),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Client-DeleteClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5658),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5658),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5657),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Client-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5811),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5811),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5810),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Client-RefreshToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5962),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5962),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(5962),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Client-ActivateDeactivateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6080),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6080),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6080),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "ClientClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6260),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6260),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6259),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "ClientClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6414),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6413),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6413),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "ClientClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6560),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6560),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6560),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "ClientClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6680),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6680),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6679),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6832),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6831),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6831),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "ClientClaim-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6981),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6981),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(6981),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "ClientClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7101),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7100),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7100),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "ClientApiResource-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7252),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7251),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7251),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Password-ChangePassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7403),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7402),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7402),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Password-ResetPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7515),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7515),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7515),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Password-ForgotPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7668),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7668),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7667),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "Role-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7835),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7835),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7835),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "Role-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7989),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7988),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(7988),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "Role-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8106),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8105),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8105),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "Role-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8255),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8255),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8255),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "Role-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8409),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8409),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8409),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "Role-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8527),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8526),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8526),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "Role-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8675),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8675),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8674),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "User-CreateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8828),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8828),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8827),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8977),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8977),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(8977),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            Claim = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9094),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9094),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9094),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            Claim = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9245),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9245),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9244),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            Claim = "User-DeleteUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9411),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9411),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9411),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            Claim = "User-ActivateDeactivateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9536),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9535),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9535),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            Claim = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9691),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9691),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9690),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            Claim = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9848),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9847),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9847),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            Claim = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9966),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9965),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(9965),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            Claim = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(119),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(119),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(119),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            Claim = "ApiClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(272),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(271),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(271),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            Claim = "ApiClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(421),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(420),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(420),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            Claim = "ApiClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(540),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(539),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(539),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            Claim = "ApiClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(846),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(845),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(845),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            Claim = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1054),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1053),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1053),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            Claim = "ApiClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1175),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1174),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1174),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            Claim = "ApiClaim-RequiredTokenUpdate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1342),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1342),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1342),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            Claim = "ApiClaim-GetAllByServiceId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1495),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1495),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1495),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            Claim = "Service-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1612),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1611),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1611),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            Claim = "Service-ActivateDeactivateService",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1766),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1766),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1765),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            Claim = "Service-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1926),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1926),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(1925),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            Claim = "Service-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2106),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2106),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2105),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            Claim = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2229),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2229),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2229),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            Claim = "Service-GetByID",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2399),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2399),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2399),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            Claim = "Actions-IdentityClaimSeeder",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2551),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2550),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2550),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            Claim = "User-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2668),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2667),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 705, DateTimeKind.Utc).AddTicks(2667),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmationEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "",
                            Email = "abirham.johannes@gmail.com",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            FirstName = "Abraham",
                            IdTokenLifetime = 7200,
                            IsAccountLocked = false,
                            IsCompany = false,
                            IsConfirmationEmailSent = false,
                            IsReadOnly = false,
                            IsSuperAdmin = true,
                            LastLoginDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Yohannes",
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9713),
                            LoginAttemptCount = 0,
                            Password = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            PhoneNumber = "+251921175520",
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9713),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9712),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            Username = "abrahamjo",
                            VerificationToken = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9732),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9732),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9732),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("UserModules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientId = 1L,
                            Description = "Admin",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9501),
                            Name = "Admin",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9501),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9500),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMultiTenant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "QuestionBank Service",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsMultiTenant = false,
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3992),
                            Name = "QuestionBankService",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3992),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 704, DateTimeKind.Utc).AddTicks(3991),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "Dashboard-View",
                            ClientId = 1L,
                            Description = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(685),
                            Name = "Dashboard-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(685),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(684),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "Users-View",
                            ClientId = 1L,
                            Description = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1136),
                            Name = "Users-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1136),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1135),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "Roles-View",
                            ClientId = 1L,
                            Description = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1377),
                            Name = "Roles-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1377),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1376),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "Clients-View",
                            ClientId = 1L,
                            Description = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1652),
                            Name = "Clients-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1652),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1651),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Services-View",
                            ClientId = 1L,
                            Description = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1895),
                            Name = "Services-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1895),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(1895),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "ApiClaims-View",
                            ClientId = 1L,
                            Description = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2155),
                            Name = "ApiClaims-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2154),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2154),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "ClientClaim-Views",
                            ClientId = 1L,
                            Description = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2429),
                            Name = "ClientClaim-Views",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2428),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2428),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Users-Add",
                            ClientId = 1L,
                            Description = "Users-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2671),
                            Name = "Users-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2671),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2671),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Users-Delete",
                            ClientId = 1L,
                            Description = "Users-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2907),
                            Name = "Users-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2906),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(2906),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Users-Deactivate",
                            ClientId = 1L,
                            Description = "Users-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3179),
                            Name = "Users-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3179),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3178),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Users-Edit",
                            ClientId = 1L,
                            Description = "Users-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3422),
                            Name = "Users-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3422),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3421),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Reset-Password",
                            ClientId = 1L,
                            Description = "Reset-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3675),
                            Name = "Reset-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3675),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3674),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Roles-Add",
                            ClientId = 1L,
                            Description = "Roles-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3953),
                            Name = "Roles-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3953),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(3952),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "Roles-Deactivate",
                            ClientId = 1L,
                            Description = "Roles-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4204),
                            Name = "Roles-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4204),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4204),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "Roles-Edit",
                            ClientId = 1L,
                            Description = "Roles-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4447),
                            Name = "Roles-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4446),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4446),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "Roles-Delete",
                            ClientId = 1L,
                            Description = "Roles-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4725),
                            Name = "Roles-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4725),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4725),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4973),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4972),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(4972),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5227),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5226),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5226),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "Clients-Deactivate",
                            ClientId = 1L,
                            Description = "Clients-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5494),
                            Name = "Clients-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5493),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5493),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "Clients-Edit",
                            ClientId = 1L,
                            Description = "Clients-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5738),
                            Name = "Clients-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5738),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5737),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "Service-Add",
                            ClientId = 1L,
                            Description = "Service-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5977),
                            Name = "Service-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5977),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(5977),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Service-Delete",
                            ClientId = 1L,
                            Description = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6248),
                            Name = "Service-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6248),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6247),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Service-Deactivate",
                            ClientId = 1L,
                            Description = "Service-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6492),
                            Name = "Service-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6492),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6492),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Service-Edit",
                            ClientId = 1L,
                            Description = "Service-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6741),
                            Name = "Service-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6741),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6741),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "ApiClaim-Add",
                            ClientId = 1L,
                            Description = "ApiClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6999),
                            Name = "ApiClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6999),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(6998),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "ApiClaim-Delete",
                            ClientId = 1L,
                            Description = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7245),
                            Name = "ApiClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7245),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7244),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "ApiClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ApiClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7488),
                            Name = "ApiClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7487),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7487),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "ApiClaim-Edit",
                            ClientId = 1L,
                            Description = "ApiClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7745),
                            Name = "ApiClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7745),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7744),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "ClientClaim-Add",
                            ClientId = 1L,
                            Description = "ClientClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7988),
                            Name = "ClientClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7987),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(7987),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "ClientClaim-Delete",
                            ClientId = 1L,
                            Description = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8240),
                            Name = "ClientClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8240),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8239),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "ClientClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ClientClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8485),
                            Name = "ClientClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8485),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8484),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "ClientClaim-Edit",
                            ClientId = 1L,
                            Description = "ClientClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8750),
                            Name = "ClientClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8750),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8750),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "Change-Password",
                            ClientId = 1L,
                            Description = "Change-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8989),
                            Name = "Change-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8988),
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(8988),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ClientClaimId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientClaimId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9628),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9628),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9628),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ClientClaimId = 2L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9633),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9633),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9633),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ClientClaimId = 3L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9635),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9634),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9634),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ClientClaimId = 4L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9636),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9636),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9635),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ClientClaimId = 5L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9637),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9637),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9637),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ClientClaimId = 6L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9638),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9638),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9638),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ClientClaimId = 7L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9640),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9639),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9639),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ClientClaimId = 8L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9641),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9641),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9640),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ClientClaimId = 9L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9642),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9642),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9642),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ClientClaimId = 10L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9643),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9643),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9643),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ClientClaimId = 11L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9645),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9644),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9644),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ClientClaimId = 12L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9646),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9646),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9645),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ClientClaimId = 13L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9648),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9647),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9647),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ClientClaimId = 14L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9649),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9649),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9648),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ClientClaimId = 15L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9651),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9651),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9651),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ClientClaimId = 16L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9653),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9652),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9652),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ClientClaimId = 17L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9654),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9654),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9653),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ClientClaimId = 18L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9655),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9655),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9655),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ClientClaimId = 19L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9657),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9656),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9656),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ClientClaimId = 20L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9658),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9658),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9657),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ClientClaimId = 21L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9660),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9659),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9659),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ClientClaimId = 22L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9661),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9661),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9660),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ClientClaimId = 23L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9662),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9662),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9662),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ClientClaimId = 24L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9665),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9665),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9665),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ClientClaimId = 25L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9666),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9666),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9666),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ClientClaimId = 26L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9668),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9668),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9668),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ClientClaimId = 27L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9669),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9669),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9669),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ClientClaimId = 28L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9671),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9670),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9670),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ClientClaimId = 29L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9673),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9673),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9673),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ClientClaimId = 30L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9675),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9674),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9674),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ClientClaimId = 31L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9676),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9676),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9675),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ClientClaimId = 32L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9677),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9677),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9677),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ClientClaimId = 33L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9678),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9678),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 11, 22, 7, 706, DateTimeKind.Utc).AddTicks(9678),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizatoinId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrganizatoinId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Clients.ApiClaim", "ApiClaim")
                        .WithMany()
                        .HasForeignKey("ApiClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("ClientApiResources")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiClaim");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Service", "Service")
                        .WithMany("ApiClaims")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany("IdentityUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Subscription", "Subscription")
                        .WithMany("Organizatoins")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Question", "Question")
                        .WithMany("Choice")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("ExamResults")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Course", "Course")
                        .WithMany("Module")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("Question")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("UserModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("Role")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.User.ClientClaim", "ClientClaim")
                        .WithMany()
                        .HasForeignKey("ClientClaimId");

                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");

                    b.Navigation("ClientClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Organization", "Organizatoin")
                        .WithMany()
                        .HasForeignKey("OrganizatoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Organizatoin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Navigation("ClientApiResources");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Navigation("IdentityUserRoles");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Navigation("ExamResults");

                    b.Navigation("Question");

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Navigation("Choice");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Navigation("ApiClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Navigation("Organizatoins");
                });
#pragma warning restore 612, 618
        }
    }
}
