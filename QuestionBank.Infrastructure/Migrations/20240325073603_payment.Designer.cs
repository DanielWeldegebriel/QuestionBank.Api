// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionBank.Infrastructure.Context;

#nullable disable

namespace QuestionBank.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240325073603_payment")]
    partial class payment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AccessTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessTokenLifeTime = 360000,
                            ClientId = "QuestionBank",
                            ClientName = "QuestionBank",
                            ClientSecret = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            Description = "QuestionBank Access Managment Client",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(2962),
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefreshTokenLifeTime = 360000,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(2964),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(2961),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ApiClaimId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiClaimId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAPIResource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApiClaimId = 1L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3998),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3998),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3998),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ApiClaimId = 2L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4128),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4128),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4127),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ApiClaimId = 3L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4696),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4696),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4696),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ApiClaimId = 4L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4786),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4786),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4786),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ApiClaimId = 5L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4913),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4913),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(4912),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ApiClaimId = 6L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5026),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5026),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5026),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ApiClaimId = 7L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5111),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5111),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5111),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ApiClaimId = 8L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5251),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5251),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5250),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ApiClaimId = 9L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5377),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5377),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5377),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ApiClaimId = 10L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5710),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5710),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5710),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ApiClaimId = 11L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5800),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5800),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5799),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ApiClaimId = 12L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5926),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5926),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(5925),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ApiClaimId = 13L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6062),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6061),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6061),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ApiClaimId = 14L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6205),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6205),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6204),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ApiClaimId = 15L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6298),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6297),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6297),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ApiClaimId = 16L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6413),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6413),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6413),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ApiClaimId = 17L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6527),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6526),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6526),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ApiClaimId = 18L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6617),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6617),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6617),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ApiClaimId = 19L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6732),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6732),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6731),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ApiClaimId = 20L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6864),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6864),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6864),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ApiClaimId = 21L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6976),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6976),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(6976),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ApiClaimId = 22L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7272),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7272),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7272),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ApiClaimId = 23L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7378),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7377),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7377),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ApiClaimId = 24L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7489),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7489),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7489),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ApiClaimId = 25L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7599),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7599),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7599),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ApiClaimId = 26L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7684),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7684),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7684),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ApiClaimId = 27L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7813),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7812),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7812),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ApiClaimId = 28L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7920),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7920),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(7919),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ApiClaimId = 29L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8023),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8023),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8023),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ApiClaimId = 30L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8108),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8108),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8107),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ApiClaimId = 31L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8227),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8227),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8227),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ApiClaimId = 32L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8336),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8335),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8335),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ApiClaimId = 33L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8419),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8418),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8418),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            ApiClaimId = 34L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8735),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8735),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8735),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            ApiClaimId = 35L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8845),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8845),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8845),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            ApiClaimId = 36L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8963),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8963),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(8962),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            ApiClaimId = 37L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9048),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9048),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9048),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            ApiClaimId = 38L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9163),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9163),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9162),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            ApiClaimId = 39L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9280),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9280),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9280),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            ApiClaimId = 40L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9393),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9392),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9392),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            ApiClaimId = 41L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9478),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9478),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9478),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            ApiClaimId = 42L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9603),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9602),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9602),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            ApiClaimId = 43L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9713),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9713),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9712),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            ApiClaimId = 44L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9798),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9798),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9798),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            ApiClaimId = 45L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9915),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9915),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(9914),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            ApiClaimId = 46L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(28),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(28),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(28),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            ApiClaimId = 47L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(135),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(135),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(135),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            ApiClaimId = 48L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(219),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(218),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(218),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            ApiClaimId = 49L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(330),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(330),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(329),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            ApiClaimId = 50L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(462),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(462),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(462),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            ApiClaimId = 51L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(588),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(588),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(588),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            ApiClaimId = 52L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(678),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(677),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(677),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            ApiClaimId = 53L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(799),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(799),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(798),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            ApiClaimId = 54L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(908),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(907),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(907),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            ApiClaimId = 55L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(992),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(992),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(992),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            ApiClaimId = 56L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1101),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1101),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1101),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            ApiClaimId = 57L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1233),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1233),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1233),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequireIdToken")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApiClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "TokenValidator-ValidateAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3522),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3521),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3521),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "TokenValidator-ValidateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3663),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3663),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3663),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "TokenValidator-ValidateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3787),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3787),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3786),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "TokenValidator-GenerateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3915),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3915),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3915),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Client-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4036),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4036),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4036),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "Client-GetById",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4128),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4128),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4128),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "Client-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4248),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4247),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4247),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Client-GetClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4368),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4368),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4368),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Client-UpdateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4459),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4459),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4458),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Client-DeleteClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4580),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4579),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4579),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Client-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4698),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4698),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4697),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Client-RefreshToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4788),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4788),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4788),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Client-ActivateDeactivateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4924),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4924),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(4923),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "ClientClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5041),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5041),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5040),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "ClientClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5163),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5162),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5162),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "ClientClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5256),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5256),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5255),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "ClientClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5414),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5414),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5414),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5533),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5532),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5532),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "ClientClaim-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5625),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5625),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5624),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "ClientClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5745),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5744),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5744),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "ClientApiResource-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5864),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5864),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5863),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Password-ChangePassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5981),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5980),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(5980),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Password-ResetPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6070),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6070),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6070),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Password-ForgotPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6423),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6423),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6423),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "Role-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6544),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6544),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6543),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "Role-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6637),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6637),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6636),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "Role-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6967),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6966),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(6966),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "Role-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7306),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7306),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7306),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "Role-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7400),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7399),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7399),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "Role-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7522),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7522),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7522),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "Role-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7641),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7640),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7640),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "User-CreateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7756),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7756),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(7756),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8052),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8052),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8052),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            Claim = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8169),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8169),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8168),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            Claim = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8768),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8768),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8767),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            Claim = "User-DeleteUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8878),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8878),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(8878),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            Claim = "User-ActivateDeactivateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9008),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9008),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9007),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            Claim = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9341),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9340),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9340),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            Claim = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9639),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9639),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9638),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            Claim = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9972),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9972),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(9972),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            Claim = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(94),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(94),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(93),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            Claim = "ApiClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(212),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(211),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(211),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            Claim = "ApiClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(304),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(304),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(304),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            Claim = "ApiClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(630),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(630),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(629),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            Claim = "ApiClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1064),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1064),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1063),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            Claim = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1238),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1238),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1237),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            Claim = "ApiClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1585),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1585),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1585),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            Claim = "ApiClaim-RequiredTokenUpdate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1909),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1909),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(1908),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            Claim = "ApiClaim-GetAllByServiceId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2028),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2028),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2028),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            Claim = "Service-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2125),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2125),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2124),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            Claim = "Service-ActivateDeactivateService",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2450),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2450),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2450),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            Claim = "Service-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2781),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2781),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2781),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            Claim = "Service-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2875),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2875),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2874),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            Claim = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2992),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2992),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(2992),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            Claim = "Service-GetByID",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3325),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3324),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3324),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            Claim = "Actions-IdentityClaimSeeder",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3415),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3415),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3414),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            Claim = "User-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3533),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3533),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 275, DateTimeKind.Utc).AddTicks(3533),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmationEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "",
                            Email = "abirham.johannes@gmail.com",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            FirstName = "Abraham",
                            IdTokenLifetime = 7200,
                            IsAccountLocked = false,
                            IsCompany = false,
                            IsConfirmationEmailSent = false,
                            IsReadOnly = false,
                            IsSuperAdmin = true,
                            LastLoginDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Yohannes",
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8861),
                            LoginAttemptCount = 0,
                            Password = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            PhoneNumber = "+251921175520",
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8861),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8861),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            Username = "abrahamjo",
                            VerificationToken = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8878),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8878),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8877),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserModuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserModuleId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Payment")
                        .HasColumnType("int");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("UserModules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientId = 1L,
                            Description = "Admin",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8694),
                            Name = "Admin",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8694),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8694),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMultiTenant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "QuestionBank Service",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsMultiTenant = false,
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3266),
                            Name = "QuestionBankService",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3266),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 274, DateTimeKind.Utc).AddTicks(3266),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "Dashboard-View",
                            ClientId = 1L,
                            Description = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1570),
                            Name = "Dashboard-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1570),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1570),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "Users-View",
                            ClientId = 1L,
                            Description = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1906),
                            Name = "Users-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1905),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(1905),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "Roles-View",
                            ClientId = 1L,
                            Description = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2105),
                            Name = "Roles-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2105),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2104),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "Clients-View",
                            ClientId = 1L,
                            Description = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2310),
                            Name = "Clients-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2310),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2309),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Services-View",
                            ClientId = 1L,
                            Description = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2527),
                            Name = "Services-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2527),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2527),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "ApiClaims-View",
                            ClientId = 1L,
                            Description = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2737),
                            Name = "ApiClaims-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2737),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2737),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "ClientClaim-Views",
                            ClientId = 1L,
                            Description = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2929),
                            Name = "ClientClaim-Views",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2929),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(2929),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Users-Add",
                            ClientId = 1L,
                            Description = "Users-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3143),
                            Name = "Users-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3143),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3142),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Users-Delete",
                            ClientId = 1L,
                            Description = "Users-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3336),
                            Name = "Users-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3336),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3336),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Users-Deactivate",
                            ClientId = 1L,
                            Description = "Users-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3538),
                            Name = "Users-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3537),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3537),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Users-Edit",
                            ClientId = 1L,
                            Description = "Users-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3751),
                            Name = "Users-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3751),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3751),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Reset-Password",
                            ClientId = 1L,
                            Description = "Reset-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3968),
                            Name = "Reset-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3968),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(3968),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Roles-Add",
                            ClientId = 1L,
                            Description = "Roles-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4163),
                            Name = "Roles-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4162),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4162),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "Roles-Deactivate",
                            ClientId = 1L,
                            Description = "Roles-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4377),
                            Name = "Roles-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4377),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4376),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "Roles-Edit",
                            ClientId = 1L,
                            Description = "Roles-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4781),
                            Name = "Roles-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4781),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4780),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "Roles-Delete",
                            ClientId = 1L,
                            Description = "Roles-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4977),
                            Name = "Roles-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4977),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(4977),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5183),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5183),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5183),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5381),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5381),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5380),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "Clients-Deactivate",
                            ClientId = 1L,
                            Description = "Clients-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5564),
                            Name = "Clients-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5564),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5564),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "Clients-Edit",
                            ClientId = 1L,
                            Description = "Clients-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5770),
                            Name = "Clients-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5770),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5770),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "Service-Add",
                            ClientId = 1L,
                            Description = "Service-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5955),
                            Name = "Service-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5955),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(5954),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Service-Delete",
                            ClientId = 1L,
                            Description = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6149),
                            Name = "Service-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6149),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6149),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Service-Deactivate",
                            ClientId = 1L,
                            Description = "Service-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6353),
                            Name = "Service-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6353),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6353),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Service-Edit",
                            ClientId = 1L,
                            Description = "Service-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6546),
                            Name = "Service-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6546),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6546),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "ApiClaim-Add",
                            ClientId = 1L,
                            Description = "ApiClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6731),
                            Name = "ApiClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6731),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6730),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "ApiClaim-Delete",
                            ClientId = 1L,
                            Description = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6937),
                            Name = "ApiClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6936),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(6936),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "ApiClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ApiClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7123),
                            Name = "ApiClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7122),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7122),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "ApiClaim-Edit",
                            ClientId = 1L,
                            Description = "ApiClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7316),
                            Name = "ApiClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7316),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7315),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "ClientClaim-Add",
                            ClientId = 1L,
                            Description = "ClientClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7522),
                            Name = "ClientClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7522),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7521),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "ClientClaim-Delete",
                            ClientId = 1L,
                            Description = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7711),
                            Name = "ClientClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7710),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7709),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "ClientClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ClientClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7898),
                            Name = "ClientClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7898),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(7898),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "ClientClaim-Edit",
                            ClientId = 1L,
                            Description = "ClientClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8146),
                            Name = "ClientClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8146),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8146),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "Change-Password",
                            ClientId = 1L,
                            Description = "Change-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8335),
                            Name = "Change-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8335),
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8335),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ClientClaimId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientClaimId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8770),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8769),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8769),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ClientClaimId = 2L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8773),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8773),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8772),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ClientClaimId = 3L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8774),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8774),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8774),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ClientClaimId = 4L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8779),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8779),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8779),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ClientClaimId = 5L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8780),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8780),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8780),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ClientClaimId = 6L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8781),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8781),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8781),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ClientClaimId = 7L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8782),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8782),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8782),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ClientClaimId = 8L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8783),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8783),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8783),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ClientClaimId = 9L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8784),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8784),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8784),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ClientClaimId = 10L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8785),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8785),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8785),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ClientClaimId = 11L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8786),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8786),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8786),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ClientClaimId = 12L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8787),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8787),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8787),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ClientClaimId = 13L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8788),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8788),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8788),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ClientClaimId = 14L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8789),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8789),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8789),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ClientClaimId = 15L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8814),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8813),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8813),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ClientClaimId = 16L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8815),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8815),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8815),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ClientClaimId = 17L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8816),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8816),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8816),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ClientClaimId = 18L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8817),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8817),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8817),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ClientClaimId = 19L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8818),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8818),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8818),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ClientClaimId = 20L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8821),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8820),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8820),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ClientClaimId = 21L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8822),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8821),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8821),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ClientClaimId = 22L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8823),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8822),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8822),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ClientClaimId = 23L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8824),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8823),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8823),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ClientClaimId = 24L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8825),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8824),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8824),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ClientClaimId = 25L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8826),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8825),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8825),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ClientClaimId = 26L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8827),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8826),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8826),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ClientClaimId = 27L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8828),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8828),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8827),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ClientClaimId = 28L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8829),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8829),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8828),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ClientClaimId = 29L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8830),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8830),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8829),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ClientClaimId = 30L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8831),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8831),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8830),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ClientClaimId = 31L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8832),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8832),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8831),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ClientClaimId = 32L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8833),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8833),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8832),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ClientClaimId = 33L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8834),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8834),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 25, 7, 36, 2, 276, DateTimeKind.Utc).AddTicks(8833),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizatoinId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrganizatoinId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Clients.ApiClaim", "ApiClaim")
                        .WithMany()
                        .HasForeignKey("ApiClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("ClientApiResources")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiClaim");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Service", "Service")
                        .WithMany("ApiClaims")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany("IdentityUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Subscription", "Subscription")
                        .WithMany("Organizatoins")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Question", "Question")
                        .WithMany("Choice")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.UserModule", "UserModule")
                        .WithMany("ExamResults")
                        .HasForeignKey("UserModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Course", "Course")
                        .WithMany("Module")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("Question")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("UserModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("Role")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.User.ClientClaim", "ClientClaim")
                        .WithMany()
                        .HasForeignKey("ClientClaimId");

                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");

                    b.Navigation("ClientClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Organization", "Organizatoin")
                        .WithMany()
                        .HasForeignKey("OrganizatoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Organizatoin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Navigation("ClientApiResources");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Navigation("IdentityUserRoles");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Navigation("Question");

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Navigation("Choice");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Navigation("ApiClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Navigation("Organizatoins");
                });
#pragma warning restore 612, 618
        }
    }
}
