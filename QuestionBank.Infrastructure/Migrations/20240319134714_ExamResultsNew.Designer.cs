// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionBank.Infrastructure.Context;

#nullable disable

namespace QuestionBank.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240319134714_ExamResultsNew")]
    partial class ExamResultsNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AccessTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessTokenLifeTime = 360000,
                            ClientId = "QuestionBank",
                            ClientName = "QuestionBank",
                            ClientSecret = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            Description = "QuestionBank Access Managment Client",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2514),
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefreshTokenLifeTime = 360000,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2516),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2511),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ApiClaimId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiClaimId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAPIResource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApiClaimId = 1L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2574),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2574),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2574),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ApiClaimId = 2L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2712),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2712),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2712),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ApiClaimId = 3L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2840),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2840),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2839),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ApiClaimId = 4L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2931),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2930),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2930),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ApiClaimId = 5L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3043),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3042),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3042),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ApiClaimId = 6L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3157),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3157),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3156),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ApiClaimId = 7L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3264),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3263),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3263),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ApiClaimId = 8L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3349),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3349),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3348),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ApiClaimId = 9L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3462),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3462),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3462),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ApiClaimId = 10L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3573),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3573),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3573),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ApiClaimId = 11L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3656),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3656),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3656),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ApiClaimId = 12L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3768),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3767),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3767),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ApiClaimId = 13L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3881),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3880),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(3880),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ApiClaimId = 14L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4002),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4001),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4001),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ApiClaimId = 15L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4090),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4090),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4090),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ApiClaimId = 16L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4205),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4205),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4205),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ApiClaimId = 17L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4320),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4319),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4319),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ApiClaimId = 18L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4429),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4429),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4429),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ApiClaimId = 19L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4516),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4516),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4516),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ApiClaimId = 20L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4626),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4626),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4625),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ApiClaimId = 21L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4734),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4734),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4733),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ApiClaimId = 22L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4818),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4818),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4818),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ApiClaimId = 23L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4927),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4927),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(4927),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ApiClaimId = 24L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5062),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5062),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5062),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ApiClaimId = 25L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5179),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5179),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5179),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ApiClaimId = 26L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5269),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5269),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5268),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ApiClaimId = 27L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5377),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5377),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5377),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ApiClaimId = 28L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5487),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5487),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5486),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ApiClaimId = 29L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5593),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5593),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5592),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ApiClaimId = 30L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5679),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5678),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5678),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ApiClaimId = 31L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5789),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5789),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5789),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ApiClaimId = 32L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5899),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5899),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5898),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ApiClaimId = 33L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5983),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5982),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(5982),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            ApiClaimId = 34L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6090),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6090),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6090),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            ApiClaimId = 35L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6214),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6213),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6213),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            ApiClaimId = 36L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6333),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6333),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6332),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            ApiClaimId = 37L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6421),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6421),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6420),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            ApiClaimId = 38L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6531),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6530),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6530),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            ApiClaimId = 39L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6643),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6643),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6642),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            ApiClaimId = 40L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6758),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6757),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6757),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            ApiClaimId = 41L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6844),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6844),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6844),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            ApiClaimId = 42L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6976),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6975),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(6975),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            ApiClaimId = 43L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7086),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7086),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7085),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            ApiClaimId = 44L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7170),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7169),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7169),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            ApiClaimId = 45L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7279),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7279),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7279),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            ApiClaimId = 46L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7387),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7387),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7387),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            ApiClaimId = 47L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7504),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7504),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7503),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            ApiClaimId = 48L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7592),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7592),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7592),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            ApiClaimId = 49L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7702),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7702),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7702),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            ApiClaimId = 50L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7810),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7810),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7810),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            ApiClaimId = 51L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7923),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7923),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(7923),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            ApiClaimId = 52L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8009),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8009),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8009),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            ApiClaimId = 53L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8124),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8124),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8124),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            ApiClaimId = 54L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8234),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8234),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8234),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            ApiClaimId = 55L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8319),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8318),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8318),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            ApiClaimId = 56L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8431),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8431),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8430),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            ApiClaimId = 57L,
                            ClientId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8544),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8544),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8543),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequireIdToken")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ApiClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "TokenValidator-ValidateAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3027),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3027),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3026),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "TokenValidator-ValidateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3163),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3163),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3163),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "TokenValidator-ValidateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3299),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3298),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3298),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "TokenValidator-GenerateEmailToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3422),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3422),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3421),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Client-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3546),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3546),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3546),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "Client-GetById",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3647),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3646),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3646),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "Client-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3775),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3774),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3774),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Client-GetClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3921),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3920),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(3920),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Client-UpdateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4023),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4022),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4022),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Client-DeleteClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4148),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4148),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4148),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Client-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4273),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4272),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4272),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Client-RefreshToken",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4392),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4391),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4391),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Client-ActivateDeactivateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4488),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4488),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4487),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "ClientClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4611),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4611),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4610),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "ClientClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4744),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4744),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4743),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "ClientClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4845),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4844),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4844),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "ClientClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4965),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4965),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(4964),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5087),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5087),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5087),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "ClientClaim-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5182),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5182),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5182),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "ClientClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5303),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5302),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5302),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "ClientApiResource-CreateClient",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5430),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5430),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5430),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Password-ChangePassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5554),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5554),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5554),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Password-ResetPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5653),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5653),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5653),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Password-ForgotPassword",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5776),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5776),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5775),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "Role-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5898),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5898),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5897),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "Role-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5993),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5993),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(5993),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "Role-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6131),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6131),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6131),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "Role-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6255),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6255),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6254),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "Role-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6350),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6350),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6350),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "Role-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6478),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6478),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6477),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "Role-GetByClientId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6606),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6606),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6605),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "User-CreateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6732),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6732),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6732),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6832),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6832),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6831),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 34L,
                            Claim = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6958),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6958),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(6957),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 35L,
                            Claim = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7203),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7203),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7203),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 36L,
                            Claim = "User-DeleteUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7307),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7307),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7307),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 37L,
                            Claim = "User-ActivateDeactivateUser",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7868),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7867),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(7867),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 38L,
                            Claim = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8070),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8070),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8070),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 39L,
                            Claim = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8625),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8625),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8624),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 40L,
                            Claim = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8809),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8809),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8809),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 41L,
                            Claim = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8999),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8999),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(8999),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 42L,
                            Claim = "ApiClaim-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9159),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9159),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9159),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 43L,
                            Claim = "ApiClaim-Get",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9274),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9273),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9273),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 44L,
                            Claim = "ApiClaim-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9627),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9626),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(9626),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 45L,
                            Claim = "ApiClaim-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(461),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(461),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(460),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 46L,
                            Claim = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(824),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(824),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(824),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 47L,
                            Claim = "ApiClaim-UpdateStatus",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(960),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(959),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(959),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 48L,
                            Claim = "ApiClaim-RequiredTokenUpdate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1255),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1255),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1255),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 49L,
                            Claim = "ApiClaim-GetAllByServiceId",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1392),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1391),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1391),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 50L,
                            Claim = "Service-Create",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1497),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1496),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1496),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 51L,
                            Claim = "Service-ActivateDeactivateService",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1639),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1638),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1638),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 52L,
                            Claim = "Service-GetAll",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1760),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1760),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1759),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 53L,
                            Claim = "Service-Update",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1857),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1857),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1856),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 54L,
                            Claim = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1986),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1986),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(1985),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 55L,
                            Claim = "Service-GetByID",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2107),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2107),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2107),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 56L,
                            Claim = "Actions-IdentityClaimSeeder",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2202),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2202),
                            RequireIdToken = true,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2201),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 57L,
                            Claim = "User-Login",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2323),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2323),
                            RequireIdToken = false,
                            ServiceId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(2323),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmationEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "",
                            Email = "abirham.johannes@gmail.com",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            FirstName = "Abraham",
                            IdTokenLifetime = 7200,
                            IsAccountLocked = false,
                            IsCompany = false,
                            IsConfirmationEmailSent = false,
                            IsReadOnly = false,
                            IsSuperAdmin = true,
                            LastLoginDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Yohannes",
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7051),
                            LoginAttemptCount = 0,
                            Password = "$2b$10$UBR4e8chMW.lGAax7sjduur2wcijJs5.9uhI0KvJWyhMNEWEqXOA6",
                            PhoneNumber = "+251921175520",
                            RecordStatus = 2,
                            RefreshToken = "",
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7051),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7050),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            Username = "abrahamjo",
                            VerificationToken = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7066),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7065),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7065),
                            TimeZoneInfo = "",
                            UpdatedBy = "",
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserModuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserModuleId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("UserModules");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientId = 1L,
                            Description = "Admin",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6885),
                            Name = "Admin",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6885),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6884),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMultiTenant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "QuestionBank Service",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsMultiTenant = false,
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2792),
                            Name = "QuestionBankService",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2792),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 545, DateTimeKind.Utc).AddTicks(2792),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Claim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Claim = "Dashboard-View",
                            ClientId = 1L,
                            Description = "Dashboard-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8877),
                            Name = "Dashboard-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8877),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(8876),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            Claim = "Users-View",
                            ClientId = 1L,
                            Description = "Users-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9209),
                            Name = "Users-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9209),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9209),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            Claim = "Roles-View",
                            ClientId = 1L,
                            Description = "Roles-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9416),
                            Name = "Roles-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9416),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9416),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            Claim = "Clients-View",
                            ClientId = 1L,
                            Description = "Clients-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9617),
                            Name = "Clients-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9617),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9617),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            Claim = "Services-View",
                            ClientId = 1L,
                            Description = "Services-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9845),
                            Name = "Services-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9845),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 546, DateTimeKind.Utc).AddTicks(9845),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            Claim = "ApiClaims-View",
                            ClientId = 1L,
                            Description = "ApiClaims-View",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(43),
                            Name = "ApiClaims-View",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(43),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(43),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            Claim = "ClientClaim-Views",
                            ClientId = 1L,
                            Description = "ClientClaim-Views",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(257),
                            Name = "ClientClaim-Views",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(257),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(257),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            Claim = "Users-Add",
                            ClientId = 1L,
                            Description = "Users-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(483),
                            Name = "Users-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(483),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(482),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            Claim = "Users-Delete",
                            ClientId = 1L,
                            Description = "Users-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(681),
                            Name = "Users-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(681),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(681),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            Claim = "Users-Deactivate",
                            ClientId = 1L,
                            Description = "Users-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(878),
                            Name = "Users-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(877),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(877),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            Claim = "Users-Edit",
                            ClientId = 1L,
                            Description = "Users-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1103),
                            Name = "Users-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1103),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1103),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            Claim = "Reset-Password",
                            ClientId = 1L,
                            Description = "Reset-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1317),
                            Name = "Reset-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1317),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1317),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            Claim = "Roles-Add",
                            ClientId = 1L,
                            Description = "Roles-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1527),
                            Name = "Roles-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1527),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1526),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            Claim = "Roles-Deactivate",
                            ClientId = 1L,
                            Description = "Roles-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1752),
                            Name = "Roles-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1751),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1751),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            Claim = "Roles-Edit",
                            ClientId = 1L,
                            Description = "Roles-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1956),
                            Name = "Roles-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1956),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(1955),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            Claim = "Roles-Delete",
                            ClientId = 1L,
                            Description = "Roles-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2155),
                            Name = "Roles-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2155),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2154),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2381),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2381),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2381),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            Claim = "Clients-Add",
                            ClientId = 1L,
                            Description = "Clients-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2586),
                            Name = "Clients-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2586),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2585),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            Claim = "Clients-Deactivate",
                            ClientId = 1L,
                            Description = "Clients-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2794),
                            Name = "Clients-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2794),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(2794),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            Claim = "Clients-Edit",
                            ClientId = 1L,
                            Description = "Clients-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3018),
                            Name = "Clients-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3018),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3018),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            Claim = "Service-Add",
                            ClientId = 1L,
                            Description = "Service-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3218),
                            Name = "Service-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3218),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3218),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            Claim = "Service-Delete",
                            ClientId = 1L,
                            Description = "Service-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3417),
                            Name = "Service-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3417),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3417),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            Claim = "Service-Deactivate",
                            ClientId = 1L,
                            Description = "Service-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3641),
                            Name = "Service-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3640),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3640),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            Claim = "Service-Edit",
                            ClientId = 1L,
                            Description = "Service-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3839),
                            Name = "Service-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3839),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(3838),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            Claim = "ApiClaim-Add",
                            ClientId = 1L,
                            Description = "ApiClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4044),
                            Name = "ApiClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4043),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4043),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            Claim = "ApiClaim-Delete",
                            ClientId = 1L,
                            Description = "ApiClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4580),
                            Name = "ApiClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4580),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4579),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            Claim = "ApiClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ApiClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4967),
                            Name = "ApiClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4967),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(4967),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            Claim = "ApiClaim-Edit",
                            ClientId = 1L,
                            Description = "ApiClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5320),
                            Name = "ApiClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5320),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5320),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            Claim = "ClientClaim-Add",
                            ClientId = 1L,
                            Description = "ClientClaim-Add",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5550),
                            Name = "ClientClaim-Add",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5550),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5550),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            Claim = "ClientClaim-Delete",
                            ClientId = 1L,
                            Description = "ClientClaim-Delete",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5752),
                            Name = "ClientClaim-Delete",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5751),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5751),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            Claim = "ClientClaim-Deactivate",
                            ClientId = 1L,
                            Description = "ClientClaim-Deactivate",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5961),
                            Name = "ClientClaim-Deactivate",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5961),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(5960),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            Claim = "ClientClaim-Edit",
                            ClientId = 1L,
                            Description = "ClientClaim-Edit",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6193),
                            Name = "ClientClaim-Edit",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6193),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6193),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            Claim = "Change-Password",
                            ClientId = 1L,
                            Description = "Change-Password",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = true,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6392),
                            Name = "Change-Password",
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6392),
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6392),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ClientClaimId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientClaimId = 1L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6955),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6955),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6955),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2L,
                            ClientClaimId = 2L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6959),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6958),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6958),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3L,
                            ClientClaimId = 3L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6960),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6960),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6959),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4L,
                            ClientClaimId = 4L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6961),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6961),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6960),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 5L,
                            ClientClaimId = 5L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6962),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6962),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6961),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 6L,
                            ClientClaimId = 6L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6963),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6963),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6962),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 7L,
                            ClientClaimId = 7L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6964),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6964),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6963),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 8L,
                            ClientClaimId = 8L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6965),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6965),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6965),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 9L,
                            ClientClaimId = 9L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6966),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6966),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6966),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 10L,
                            ClientClaimId = 10L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6967),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6967),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6967),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 11L,
                            ClientClaimId = 11L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6968),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6968),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6968),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 12L,
                            ClientClaimId = 12L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6969),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6969),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6969),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 13L,
                            ClientClaimId = 13L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6970),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6970),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(6970),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 14L,
                            ClientClaimId = 14L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7003),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7003),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7003),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 15L,
                            ClientClaimId = 15L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7004),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7004),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7004),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 16L,
                            ClientClaimId = 16L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7006),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7005),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7005),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 17L,
                            ClientClaimId = 17L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7007),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7006),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7006),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 18L,
                            ClientClaimId = 18L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7009),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7009),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7008),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 19L,
                            ClientClaimId = 19L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7010),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7010),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7009),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 20L,
                            ClientClaimId = 20L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7012),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7012),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7011),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 21L,
                            ClientClaimId = 21L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7013),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7013),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7012),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 22L,
                            ClientClaimId = 22L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7014),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7014),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7013),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 23L,
                            ClientClaimId = 23L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7015),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7015),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7014),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 24L,
                            ClientClaimId = 24L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7016),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7016),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7015),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 25L,
                            ClientClaimId = 25L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7017),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7017),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7016),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 26L,
                            ClientClaimId = 26L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7018),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7018),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7017),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 27L,
                            ClientClaimId = 27L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7019),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7019),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7018),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 28L,
                            ClientClaimId = 28L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7020),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7020),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7019),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 29L,
                            ClientClaimId = 29L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7021),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7021),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7020),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 30L,
                            ClientClaimId = 30L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7022),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7022),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7021),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 31L,
                            ClientClaimId = 31L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7023),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7023),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7022),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 32L,
                            ClientClaimId = 32L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7024),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7024),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7023),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 33L,
                            ClientClaimId = 33L,
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            IsReadOnly = false,
                            LastUpdateDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7025),
                            RecordStatus = 2,
                            RegisteredBy = "",
                            RegisteredDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7025),
                            RoleId = 1L,
                            StartDate = new DateTime(2024, 3, 19, 13, 47, 13, 547, DateTimeKind.Utc).AddTicks(7024),
                            TimeZoneInfo = "",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizatoinId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrganizatoinId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.ClientApiResources", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Clients.ApiClaim", "ApiClaim")
                        .WithMany()
                        .HasForeignKey("ApiClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("ClientApiResources")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiClaim");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Clients.ApiClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Service", "Service")
                        .WithMany("ApiClaims")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUserRole", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany("IdentityUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Organization", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Subscription", "Subscription")
                        .WithMany("Organizatoins")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Choice", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Question", "Question")
                        .WithMany("Choice")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.ExamResult", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.UserModule", "UserModule")
                        .WithMany("ExamResults")
                        .HasForeignKey("UserModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Course", "Course")
                        .WithMany("Module")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("Question")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.QuestionBanks.Module", "Module")
                        .WithMany("UserModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany("Role")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.ClientClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.User.RoleClaim", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.User.ClientClaim", "ClientClaim")
                        .WithMany()
                        .HasForeignKey("ClientClaimId");

                    b.HasOne("QuestionBank.Domain.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");

                    b.Navigation("ClientClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("QuestionBank.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.Organization", "Organizatoin")
                        .WithMany()
                        .HasForeignKey("OrganizatoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionBank.Domain.Models.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Organizatoin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Client", b =>
                {
                    b.Navigation("ClientApiResources");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.IdentityUser", b =>
                {
                    b.Navigation("IdentityUserRoles");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Course", b =>
                {
                    b.Navigation("Module");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Module", b =>
                {
                    b.Navigation("Question");

                    b.Navigation("UserModule");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.Question", b =>
                {
                    b.Navigation("Choice");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.QuestionBanks.UserModule", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Role", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Service", b =>
                {
                    b.Navigation("ApiClaims");
                });

            modelBuilder.Entity("QuestionBank.Domain.Models.Subscription", b =>
                {
                    b.Navigation("Organizatoins");
                });
#pragma warning restore 612, 618
        }
    }
}
